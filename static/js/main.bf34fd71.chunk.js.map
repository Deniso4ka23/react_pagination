{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","currentItems","onPageChange","lastPage","Math","ceil","allPagesArr","includes","className","classNames","disabled","href","onClick","map","pageNumber","active","itemNumber","items","App","useState","setPerPage","setCurrentPage","length","firstItem","lastItem","id","value","onChange","e","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKP,EAAQC,GAC7BO,EAAcf,EAAW,EAAGY,GAE7BG,EAAYC,SAASP,IACxBE,EAAa,GAWf,OACE,qCACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBV,IAHhB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAtBa,kBACL,IAAhBZ,EAAoBE,EAAaF,EAAc,GAAK,GAgB9C,oBAUDM,EAAYO,KAAI,SAAAC,GAAU,OACzB,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQf,IAAgBc,IAJ9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACHZ,IAAgBc,GAClBZ,EAAaY,IANnB,SAUGA,KAhBEA,MAoBT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUV,IAAgBG,IAHhC,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBG,EAC/BS,QAxDa,kBACrBZ,IAAgBG,EAAWD,EAAaF,EAAc,GAAKG,GAkDrD,uBAWJ,6BACGF,EAAaY,KAAI,SAAAG,GAAU,OAC1B,oBACE,UAAQ,OADV,wBAIWA,IAFJA,YC1FXC,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBqB,EAApB,KACA,EAAgBF,mBAASF,EAAMK,QAAxBxB,EAAP,oBAEMyB,EAAYxB,EAAUC,GAAeD,EAAU,GACjDyB,EAAWzB,EAAUC,EAErBwB,EAAW1B,IACb0B,EAAW1B,GAGb,IAAMG,EAAeV,EAAWgC,EAAWC,GAE3C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EADjC,cACgDC,EADhD,eAC+D1B,EAD/D,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAOR,GAAYQ,EAAEC,OAAOH,QALxC,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAcA,EACdC,aAAcmB,QCtDtBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bf34fd71.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\n/* eslint-disable no-console */\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  currentItems: number[];\n  onPageChange: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  currentItems,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const allPagesArr = getNumbers(1, lastPage);\n\n  if (!allPagesArr.includes(currentPage)) {\n    onPageChange(1);\n  }\n\n  const handlePrevLink = () => (\n    currentPage !== 1 ? onPageChange(currentPage - 1) : 1\n  );\n\n  const handleNextLink = () => (\n    currentPage !== lastPage ? onPageChange(currentPage + 1) : lastPage\n  );\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevLink}\n          >\n            «\n          </a>\n        </li>\n        {allPagesArr.map(pageNumber => (\n          <li\n            key={pageNumber}\n            className={classNames(\n              'page-item',\n              { active: currentPage === pageNumber },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => {\n                if (currentPage !== pageNumber) {\n                  onPageChange(pageNumber);\n                }\n              }}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === lastPage },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={handleNextLink}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {currentItems.map(itemNumber => (\n          <li\n            data-cy=\"item\"\n            key={itemNumber}\n          >\n            {`Item ${itemNumber}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total] = useState(items.length);\n\n  const firstItem = perPage * currentPage - (perPage - 1);\n  let lastItem = perPage * currentPage;\n\n  if (lastItem > total) {\n    lastItem = total;\n  }\n\n  const currentItems = getNumbers(firstItem, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => setPerPage(+e.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        currentItems={currentItems}\n        onPageChange={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}